version: 2.1

commands:
  destroy-environment:
    description: Destroy back-end and front-end cloudformation stacks given a workflow ID.
    parameters:
      workflow_id:
        type: string
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            echo "Destroying environment: << parameters.workflow_id >> "
            aws s3 rm s3://udapeople-${CIRCLE_WORKFLOW_ID:0:7} --recursive
            aws cloudformation delete-stack --stack-name udapeople-frontend-${CIRCLE_WORKFLOW_ID:0:7}

  install-dependencies:
    description: Install ansible, and aws cli
    steps:
      - run:
          name: update packages
          command: |
            sudo apt update
      - run:
          name: install pip
          command: |
            sudo apt install python3-pip
      - run:
          name: install ansible
          command: |
            python3 -m pip install --user ansible
      - run:
          name: Install aws cli
          command: |
            sudo curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            sudo unzip awscliv2.zip
            sudo ./aws/install
      - run:
          name: check python, node, pip, ansible and aws cli
          command: |
            tar --version
            node --version
            npm --version
            python3 --version
            python3 -m pip -V
            ansible --version
            aws --version

jobs:
  #-------- deploy-infra phase --------
  deploy-infrastructure:
    docker:
      - image: cimg/aws:2022.06
    steps:
      - checkout
      - run:
          name: Ensure front-end infrastructure exist
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/frontend.yml \
              --tags project=Udapeople \
              --stack-name "udapeople-frontend-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}"
      - destroy-environment:
          workflow_id: "${CIRCLE_WORKFLOW_ID:0:7}"
  #-------- deploy-frontend phase --------
  deploy-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - install-dependencies
      - restore_cache:
          keys:
            - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: Get backend url
          command: |
            export BACKEND_IP=${TYPEORM_HOST}
            export API_URL="http://${BACKEND_IP}:3030"
            echo "API_URL=${TYPEORM_HOST}"
            echo API_URL="http://${TYPEORM_HOST}:3030" >> frontend/.env
            cat frontend/.env
      - run:
          name: Deploy frontend objects
          command: |
            cd frontend
            npm install
            npm run build
            tar -czvf artifact-${CIRCLE_WORKFLOW_ID:0:7}.tar.gz dist
            aws s3 cp dist s3://udapeople-${CIRCLE_WORKFLOW_ID:0:7} --recursive
      - destroy-environment:
          workflow_id: "${CIRCLE_WORKFLOW_ID:0:7}"
  #-------- deploy-backend phase --------
  cloudfront-update:
    docker:
      - image: cimg/aws:2022.06
    steps:
      - checkout
      - run:
          name: Get old workflow id before gone
          command: |
            aws cloudformation \
            list-exports --query "Exports[?Name==\`WorkflowID\`].Value" \
            --no-paginate --output text >> ~/project/.circleci/oldWorkflowID.txt
      - persist_to_workspace:
          root: ~/project/.circleci/
          paths:
            - oldWorkflowID.txt
      - run:
          name: Update cloudfront distribution
          command: |
            aws cloudformation deploy \
            --template-file .circleci/files/cloudfront.yml \
            --stack-name InitialStack \
            --parameter-overrides WorkflowID="${CIRCLE_WORKFLOW_ID:0:7}" \
            --tags project=udapeople
      - destroy-environment:
          workflow_id: "${CIRCLE_WORKFLOW_ID:0:7}"
  cleanup:
    docker:
      - image: cimg/aws:2022.06
    steps:
      - checkout
      - attach_workspace:
          at: ~/project/.circleci
      - run:
          name: remove old stack
          command: |
            export OldWorkflowID=$(cat ~/project/.circleci/oldWorkflowID.txt)
            echo OldWorkflowID: "${OldWorkflowID}"
            echo CIRCLE_WORKFLOW_ID "${CIRCLE_WORKFLOW_ID:0:7}"         
            export STACKS=($(aws cloudformation list-stacks --query "StackSummaries[*].StackName" \
            --stack-status-filter CREATE_COMPLETE --no-paginate --output text))
            echo Stack names: "${STACKS[@]}"  
            if [[ "${CIRCLE_WORKFLOW_ID:0:7}" =~ "${OldWorkflowID}" ]]
            then
              aws s3 rm "s3://udapeople-${OldWorkflowID}" --recursive --debug
              aws cloudformation delete-stack --stack-name "udapeople-frontend-${OldWorkflowID}" --debug
            else
              echo "no env to delete"
            fi

workflows:
  default:
    jobs:
      - deploy-infrastructure
      - deploy-frontend:
          requires:
            - deploy-infrastructure
      - cloudfront-update:
          requires:
            - deploy-frontend
      - cleanup:
          requires:
            - cloudfront-update